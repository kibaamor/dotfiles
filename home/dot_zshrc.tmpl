###################################################################################################
# Load utilities

[[ -s "$HOME/.utilities.sh" ]] && \. "$HOME/.utilities.sh"


###################################################################################################
# powerlevel10k instant prompt
# https://github.com/romkatv/powerlevel10k?tab=readme-ov-file#how-do-i-initialize-direnv-when-using-instant-prompt

command_exists bash && command_exists direnv && emulate zsh -c "$(direnv export zsh)"

if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  \. "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

command_exists bash && command_exists direnv && emulate zsh -c "$(direnv hook zsh)"


###################################################################################################
# Update ulimit
ulimit -n unlimited
ulimit -c unlimited


###################################################################################################
# Environment variables

export PATH="$HOME/.local/sbin:$HOME/.local/bin:/usr/local/sbin:/usr/local/bin:/snap/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH"
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$HOME/.arkade/bin:$PATH"

command_exists go && export PATH="$(go env GOPATH)/bin:$PATH"
[[ -s "$HOME/.cargo/env" ]] && \. "$HOME/.cargo/env"

export GO111MODULE=on
if command_exists nc && nc -z artifactory.ubisoft.org 443 >/dev/null 2>&1 ; then
  export GOPROXY=https://artifactory.ubisoft.org/artifactory/go,direct
  export GOPRIVATE="*.ubisoft.org,*.ubi.com"
else
  export GOPROXY=https://goproxy.cn,direct
fi

export GROFF_NO_SGR=1
export SYSTEMD_EDITOR=vim
export EDITOR=vim
export TERM=xterm-256color

export HOMEBREW_API_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api"
export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles"
export HOMEBREW_BREW_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git"
export HOMEBREW_CORE_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git"
export HOMEBREW_PIP_INDEX_URL="https://pypi.tuna.tsinghua.edu.cn/simple"
command_exists brew && eval "$($(brew --prefix)/bin/brew shellenv)"

# export MINIKUBE_HOME="$HOME/.minikube"

export DOTNET_CLI_TELEMETRY_OPTOUT=true
export COMPOSE_BAKE=true

export default_no_proxy=localhost,127.0.0.1,::1,kubernetes.docker.internal,.ubisoft.org,.ubisoft.com,.ubisoft.onbe,.local.fleet.ubi.com
export default_proxy=
if command_exists nc ; then
  if nc -z localhost 7890 >/dev/null 2>&1 ; then
    export default_proxy=http://localhost:7890
  elif nc -z proxy.ubisoft.org 3128 >/dev/null 2>&1 ; then
    export default_proxy=http://proxy.ubisoft.org:3128
  fi
fi


###################################################################################################
# Execute custom script
[[ -s "$HOME/.customrc.pre.sh" ]] && \. "$HOME/.customrc.pre.sh"


###################################################################################################
# Update git config
if command_exists git ; then
  update_git_config "$HOME/.gitconfig" user.name "$GIT_USERNAME"
  update_git_config "$HOME/.gitconfig" user.email "$GIT_EMAIL"
  update_git_config "$HOME/.gitconfig-github" user.name "$GITHUB_USERNAME"
  update_git_config "$HOME/.gitconfig-github" user.email "$GITHUB_EMAIL"
  update_git_config "$HOME/.gitconfig-gitlab" user.name "$GITLAB_USERNAME"
  update_git_config "$HOME/.gitconfig-gitlab" user.email "$GITLAB_EMAIL"
  update_git_config "$HOME/.gitconfig-proxy" http.proxy "$default_proxy"
  update_git_config "$HOME/.gitconfig-proxy" https.proxy "$default_proxy"
fi


###################################################################################################
# Proxy
enable_proxy


###################################################################################################
# Powerlevel10k
# https://github.com/romkatv/powerlevel10k

# change GITSTATUS_CACHE_DIR or XDG_CACHE_HOME to change default cache dir for gitstatus
# https://github.com/romkatv/gitstatus/blob/master/install

# Powerlevel10k requires zsh version is greater than or equal to 5.1
if [[ "`printf '%s\n' $(zsh --version | cut -d ' ' -f2) '5.1' | sort -V -r | head -n1`" = "5.1" ]]; then
  # or we can install zsh-bin to upgrade zsh version
  # https://github.com/romkatv/zsh-bin
  # sh -c "$(curl -fsSL https://raw.githubusercontent.com/romkatv/zsh-bin/master/install)"

  ZSH_THEME="robbyrussell"
else
  ZSH_THEME="powerlevel10k/powerlevel10k"
  [[ -s "$HOME/.p10k.zsh" ]] && \. "$HOME/.p10k.zsh"
fi


###################################################################################################
# Oh my zsh
# https://github.com/ohmyzsh/ohmyzsh
export ZSH="$HOME/.oh-my-zsh"

export HIST_STAMPS="yyyy-mm-dd"

# https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins
plugins=(
  git
  web-search
  docker
  docker-compose
  kubectl
  kubectx
  microk8s
  minikube
  kind
  istioctl
  helm
  command-not-found
  sudo
  zsh-syntax-highlighting
  zsh-autosuggestions
  extract
  z
  zsh-you-should-use
  zsh-bat
  cp
  golang
  snap
  systemd
)
[[ -s "$ZSH/oh-my-zsh.sh" ]] && \. "$ZSH/oh-my-zsh.sh"

typeset -g ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=12'


###################################################################################################
# Bat
# https://github.com/sharkdp/bat
export BAT_THEME=Dracula


###################################################################################################
# Fzf
# https://github.com/junegunn/fzf
[[ -s "$HOME/.fzf.key-bindings.zsh" ]] && \. "$HOME/.fzf.key-bindings.zsh"
[[ -s "$HOME/.fzf.completion.zsh" ]] && \. "$HOME/.fzf.completion.zsh"

export FZF_DEFAULT_COMMAND='--strip-cwd-prefix --follow --hidden --exclude .git --exclude node_modules'
export FZF_CTRL_T_COMMAND="fd --type f $FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type d $FZF_DEFAULT_COMMAND"

export FZF_DEFAULT_OPTS=

# CTRL-T Paste the selected files and directories onto the command-line
export FZF_CTRL_T_OPTS="\
  --height 100%\
  --preview 'if [ -d {} ]; then (tree -C {} | head -1000) else (bat -n --color=always --theme Dracula -r :1000 {}) fi'\
  --bind 'ctrl-\\:change-preview-window(down|hidden|)'\
  --color header:italic\
  --header 'Press ALT-/ to toggle line wrap, CTRL-\ to toggle preview(Only first 1000 lines are showed)'"

# CTRL-R Paste the selected command from history onto the command-line
export FZF_CTRL_R_OPTS="\
  --height 100%\
  --preview 'bat -pl bash --color=always {f2..}'\
  --preview-window up:3:wrap\
  --bind 'ctrl-\\:toggle-preview'\
  --color header:italic\
  --header 'Press ALT-/ to toggle line wrap, CTRL-\ to toggle preview'"

# cd into the selected directory
export FZF_ALT_C_OPTS="--height 100% --preview 'tree -C {} | head -1000'"

_fzf_compgen_path() {
  fd --follow --hidden --exclude .git --exclude node_modules . "$1"
}

_fzf_compgen_dir() {
  fd --type d --follow --hidden --exclude .git --exclude node_modules . "$1"
}

_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --height 100% --preview 'tree -C {} | head -1000'                                                                                  "$@" ;;
    export|unset) fzf --height 100% --preview "eval 'echo \$'{}"                                                                                         "$@" ;;
    ssh)          fzf --height 100% --preview 'dig {}'                                                                                                   "$@" ;;
    *)            fzf --height 100% --preview 'if [ -d {} ]; then (tree -C {} | head -1000) else (bat -n --color=always --theme Dracula -r :1000 {}) fi' "$@" ;;
  esac
}


###################################################################################################
# fzf-git
# https://github.com/junegunn/fzf-git.sh

[[ -s "$HOME/.fzf-git.sh" ]] && \. "$HOME/.fzf-git.sh"

export FZF_GIT_PAGER='delta --color-only'

_fzf_git_fzf() {
  fzf --height=100%\
    --layout=reverse --multi --min-height=20 --border\
    --border-label-pos=2\
    --color='header:italic:underline,label:blue'\
    --preview-window='right,50%,border-left'\
    --bind='ctrl-/:change-preview-window(down,50%,border-top|hidden|)' "$@"
}

# https://github.com/junegunn/fzf-git.sh?tab=readme-ov-file#list-of-bindings
# use CTRL-G {key} instead of CTRL-G CTRL-{KEY}
# CTRL-G CTRL-F for Files
# CTRL-G CTRL-B for Branches
# CTRL-G CTRL-T for Tags
# CTRL-G CTRL-R for Remotes
# CTRL-G CTRL-H for commit Hashes
# CTRL-G CTRL-S for Stashes
# CTRL-G CTRL-L for reflogs
# CTRL-G CTRL-W for Worktrees
# CTRL-G CTRL-E for Each ref ( git for-each-ref )


###################################################################################################
# SSH_AUTH_SOCK

setup_ssh_agent "$HOME/.ssh/ssh-agent.env" "$HOME/.ssh/ssh-agent.socket" "$HOME/.ssh/id_rsa" "$HOME/.ssh/id_ed25519"


###################################################################################################
# Snap config sync

# sync htop config
if [[ -d "$HOME/snap/htop/current" ]] ; then
  mkdir -p -- "$HOME/snap/htop/current/.config/htop"
  cp -f -- "$HOME/.config/htop/htoprc" "$HOME/snap/htop/current/.config/htop/htoprc"
fi


###################################################################################################
# Execute custom script
[[ -s "$HOME/.customrc.post.sh" ]] && \. "$HOME/.customrc.post.sh"

export NVM_DIR="$HOME/.nvm"
[[ -s "$NVM_DIR/nvm.sh" ]] && \. "$NVM_DIR/nvm.sh"
[[ -s "$NVM_DIR/bash_completion" ]] && \. "$NVM_DIR/bash_completion"

[[ -s /opt/conda/etc/profile.d/conda.sh ]] && \. /opt/conda/etc/profile.d/conda.sh
[[ -s "$HOME/.iterm2_shell_integration.zsh" ]] && \. "$HOME/.iterm2_shell_integration.zsh"


###################################################################################################
# Alias and completion

if command_exists kubectl ; then
  source <(kubectl completion zsh)

  if command_exists kubecolor ; then
    alias kubectl=kubecolor
    compdef kubecolor=kubectl
  fi

  alias k="kubectl"
  alias ks="kubectl -n kube-system"
  alias kn="kubectl -n ingress-nginx"
  alias ki="kubectl -n istio-system"
  alias kf="kubectl -n fleet-system"

  # 'nslookup' command in busybox has issues.
  alias krnetdbg="kubectl run net-debug --image=nicolaka/netshoot --image-pull-policy=IfNotPresent -it --rm"
  alias kdelnetdbg="kubectl delete pod/net-debug"

  # run command `kubectl api-resources` to get all resources and its shortnames.
  alias kapires="kubectl api-resources"
fi

command_exists clusterctl && source <(CLUSTERCTL_DISABLE_VERSIONCHECK="true" clusterctl completion zsh)
command_exists cmctl && source <(cmctl completion zsh)
command_exists frpc && source <(frpc completion zsh)
command_exists arkade && source <(arkade completion zsh)
command_exists kubeshark && source <(KUBESHARK_DISABLE_VERSION_CHECK="true" kubeshark completion zsh)
command_exists chezmoi && source <(chezmoi completion zsh)

# if you can not pull docker image, try to disable http proxy before create minikube cluster
command_exists minikube && alias mk=minikube
command_exists istioctl && alias i=istioctl
command_exists lazydocker && alias lzd=lazydocker
command_exists proxychains4 && alias pc="proxychains4 -q"
command_exists lsd && alias ls=lsd

command_exists systemd-cgls && alias cgls="systemd-cgls"
command_exists systemd-cgtop && alias cgtop="systemd-cgtop"

alias ip="ip --color"
alias python=python3

command_exists bash && command_exists direnv && eval "$(direnv hook zsh)"
command_exists pnpm && alias pn=pnpm
