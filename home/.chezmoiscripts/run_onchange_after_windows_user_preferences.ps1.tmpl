# Add %USERPROFILE%\.local\bin to the PATH.
$bin = "$env:USERPROFILE\.local\bin"
$path = [Environment]::GetEnvironmentVariable('PATH', 'User').Split(';')
if (!$path.Contains($bin)) {
  Write-Host "Adding $bin to PATH"
  $path = [String]::Join(';', $path + $bin)
  [Environment]::SetEnvironmentVariable('PATH', $path, 'User')
}

# Softwares
{{ range $package := .packages.windows }}
if (-not (winget list --id '{{ $package }}' | Select-String '{{ $package }}')) {
  Write-Host 'Install package {{ $package }}...'
  winget install --id '{{ $package }}' --accept-package-agreements --accept-source-agreements --force --scope user
} else {
  Write-Host 'Package {{ $package }} is already installed.'
}
{{ end }}

Write-Host 'Trust package repository PSGallery...'
Set-PSRepository -Name PSGallery -InstallationPolicy Trusted

# Modules
{{ range $module := .powershell.modules }}
if (-not (Get-Module -ListAvailable -Name '{{ $module }}')) {
  Write-Host 'Install powershell module {{ $module }}...'
  Install-Module -Name '{{ $module }}' -Force -AllowClobber -Scope CurrentUser
} else {
  Write-Host 'Powershell module {{ $module }} is already installed.'
}
Import-Module -Name '{{ $module }}' -Force
{{ end }}

# PSResources
{{ range $resource := .powershell.resources }}
if (-not (Get-InstalledPSResource -Name '{{ $resource }}')) {
  Write-Host 'Install powershell resource {{ $resource }}...'
  Install-PSResource -Name '{{ $resource }}' -Scope CurrentUser -AcceptLicense
} else {
  Write-Host 'Powershell resource {{ $resource }} is already installed.'
}
Import-Module -Name '{{ $resource }}' -Force
{{ end }}

# Fonts
{{ range $font := .powershell.fonts }}
Install-NerdFont -Name '{{ $font }}' -Scope CurrentUser -Force
{{ end }}
